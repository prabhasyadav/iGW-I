{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Simulating 1D Trench Flow*\n",
    "\n",
    "The tool simulates the effect on the water table due to model parameters.\n",
    "\n",
    "## Scenario and Equation\n",
    "\n",
    "```{figure} /contents/modeling/lecture_11/images/M11_f4.png\n",
    "---\n",
    "scale: 20%\n",
    "align: center\n",
    "name: Ditch\n",
    "---\n",
    "Conceptual model of a flow between two water bodies separated by unconfined aquifer\n",
    "```\n",
    "\n",
    "You can calculate the steady flow in an unconfined aquifer with this Equations<sup>[^Fetter2017]</sup> :\n",
    "\n",
    "$$q' = \\frac{1}{2} \\cdot K \\cdot \\frac{H_o^2-H_u^2}{L}$$\n",
    "\n",
    "$$h(x)=\\sqrt{H_o^2 - \\frac{H_o^2-H_u^2}{L} \\cdot x+\\frac{R}{K} \\cdot x \\cdot(L-x)}$$\n",
    "\n",
    "with  \n",
    "$q'$ = flow per unit width $[m^2/s]$, \n",
    "$h$ = head at x $[m]$,  \n",
    "$x$ = distance from the origin $[m]$, \n",
    "$H_o$ = head at the origin $[m]$, \n",
    "$H_u$ = head at L $[m]$, \n",
    "$L$ = distance from the origin at the point $H_u$ is measured $[m]$, \n",
    "$K$ = hydraulic conductivity $[m/s]$, \n",
    "$R$ = recharge rate $[m/s]$\n",
    "\n",
    "[^Fetter2017]: C. W. Fetter, Thomas Boving, David Kreamer (2017), _Contaminant Hydrogeology_: Third Edition, Waveland Press\n",
    "\n",
    "**_Contributed by Ms. Anne Pförtner and Sophie Pförtner. The original concept from Prof. R. Liedl spreasheet code._**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "### How to use this tool ###\n",
    "\n",
    "1. Go to the Binder by clicking the rocket button (top-right of the page)\n",
    "\n",
    "2. Execute the code cell with libraries and the code cell\n",
    "\n",
    "3. Interact with the sliders.\n",
    "\n",
    "The codes are licensed under CC by 4.0 [(use anyways, but acknowledge the original work)](https://creativecommons.org/licenses/by/4.0/deed.en)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Initialize librarys\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import math\n",
    "from ipywidgets import *"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "50511109b27c43d28b7b62729b7ebae0",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "interactive(children=(BoundedFloatText(value=10.0, description='Ho:', max=1000.0, step=0.1), BoundedFloatText(…"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<function __main__.head(Ho, Hu, L, R, K)>"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Definition of the function\n",
    "def head(Ho, Hu, L, R, K):\n",
    "\n",
    "    \"\"\"\n",
    "    Ho: inflow head in [m]\n",
    "    Hu: outflow head in [m]\n",
    "    L:  Domain length in [m]\n",
    "    R:  Recharge rate in [mm/d]\n",
    "    K: Hydraulic conductivity in [m/s]\n",
    "    \"\"\"\n",
    "    x = np.arange(0, L,L/1000)\n",
    "    R=R/1000/365.25/86400\n",
    "    h=(Ho**2-(Ho**2-Hu**2)/L*x+(R/K*x*(L-x)))**0.5\n",
    "    plt.plot(x, h)\n",
    "    plt.ylabel('head [m]')\n",
    "    plt.ylim(0,1.5*Ho)\n",
    "    plt.xlabel('x [m]')\n",
    "    plt.xlim(0,L)\n",
    "    plt.show()\n",
    "\n",
    "style = {'description_width': 'initial'}  \n",
    "interact(head,\n",
    "         Ho=widgets.BoundedFloatText(value=10, min=0, max=1000, step=0.1, description='Ho:', disabled=False),\n",
    "         Hu=widgets.BoundedFloatText(value=7.5, min=0, max=1000, step=0.1, description='Hu:', disabled=False),\n",
    "         L= widgets.BoundedFloatText(value=175,min=0, max=10000,step=1, description='L:' , disabled=False),\n",
    "         R=(-500,2500,10),\n",
    "         K=widgets.FloatLogSlider(value=0.0002,base=10,min=-6, max=-2, step=0.0001,readout_format='.2e'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
