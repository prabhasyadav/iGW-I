{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m Provided are: \u001b[0m \n",
      "\n",
      "thickness of layer 1 = 3 m\n",
      "thickness of layer 2 = 2.5 m\n",
      "thickness of layer 3 = 1.75 m\n",
      "\n",
      "conductivity of layer 1 = 3.5e-03 m/s\n",
      "conductivity of layer 2 = 2.0e-02 m/s\n",
      "conductivity of layer 3 5.0e-04 m/s\n",
      "\n",
      "\u001b[1mSolution:\u001b[0m\n",
      "The resulting hydraulic conductivity of the layer system is \u001b[1m8.5e-03 m/s\u001b[0m.\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "\n",
    "print(\"\\033[1m Provided are: \\033[0m \\n\")\n",
    "\n",
    "#Thickness of i-th layer [m]\n",
    "m1 = 3 \n",
    "m2 = 2.5\n",
    "m3 = 1.75\n",
    "\n",
    "#conductivity of i-th layer [m/s]\n",
    "K1 = 3.5e-3\n",
    "K2 = 2e-2\n",
    "K3 = 5e-4\n",
    "\n",
    "\n",
    "#intermediate calculation\n",
    "m = m1+m2+m3\n",
    "\n",
    "#solution\n",
    "K = (m1*K1+m2*K2+m3*K3)/m\n",
    "print(\"thickness of layer 1 = {}\".format(m1), \"m\\nthickness of layer 2 = {}\".format(m2),\"m\\nthickness of layer 3 = {}\".format(m3), \"m\\n\\nconductivity of layer 1 = {:02.1e}\".format(K1),\n",
    "      \"m/s\\nconductivity of layer 2 = {:02.1e}\".format(K2), \"m/s\\nconductivity of layer 3 {:02.1e}\".format(K3), \"m/s\")\n",
    "print(\"\\n\\033[1mSolution:\\033[0m\\nThe resulting hydraulic conductivity of the layer system is \\033[1m{:02.1e} m/s\\033[0m.\".format(K))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m Provided are:\u001b[0m\n",
      "thickness of layer 1 = 3 m\n",
      "thickness of layer 2 = 2.5 m\n",
      "thickness of layer 3 = 1.75 m\n",
      "\n",
      "conductivity of layer 1 = 3.5e-03 m/s\n",
      "conductivity of layer 2 = 2.0e-02 m/s\n",
      "conductivity of layer 3 5.0e-04 m/s\n",
      "\n",
      "\u001b[1mSolution:\u001b[0m\n",
      "The resulting hydraulic conductivity of the layer system is \u001b[1m1.6e-03 m/s\u001b[0m.\n"
     ]
    }
   ],
   "source": [
    "print(\"\\033[1m Provided are:\\033[0m\")\n",
    "\n",
    "#Thickness of i-th layer [m]\n",
    "m1 = 3 \n",
    "m2 = 2.5\n",
    "m3 = 1.75\n",
    "\n",
    "#conductivity of i-th layer [m/s]\n",
    "K1 = 3.5e-3\n",
    "K2 = 2e-2\n",
    "K3 = 5e-4\n",
    "\n",
    "#intermediate calculation\n",
    "m = m1+m2+m3\n",
    "\n",
    "#solution\n",
    "K = m/(m1/K1+m2/K2+m3/K3)\n",
    "\n",
    "print(\"thickness of layer 1 = {}\".format(m1), \"m\\nthickness of layer 2 = {}\".format(m2),\"m\\nthickness of layer 3 = {}\".format(m3), \"m\\n\\nconductivity of layer 1 = {:02.1e}\".format(K1),\n",
    "      \"m/s\\nconductivity of layer 2 = {:02.1e}\".format(K2), \"m/s\\nconductivity of layer 3 {:02.1e}\".format(K3), \"m/s\")\n",
    "print(\"\\n\\033[1mSolution:\\033[0m\\nThe resulting hydraulic conductivity of the layer system is \\033[1m{:02.1e} m/s\\033[0m.\".format(K))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m Provided are:\u001b[0m \n",
      "\n",
      "Hydraulic conductivity = 5.0e-04 m/s\n",
      "\n",
      "\u001b[1mSolution:\u001b[0m\n",
      "\n",
      "The resulting hydraulic resistance is \u001b[1m2.0e+03 s/m\u001b[0m.\n"
     ]
    }
   ],
   "source": [
    "print(\"\\033[1m Provided are:\\033[0m \\n\")\n",
    "\n",
    "K = 5e-4 # m/s, hydraulic conductivity\n",
    "\n",
    "#solution\n",
    "R = 1/K\n",
    "\n",
    "print(\"Hydraulic conductivity = {:02.1e} m/s\".format(K))\n",
    "print(\"\\n\\033[1mSolution:\\033[0m\\n\\nThe resulting hydraulic resistance is \\033[1m{:02.1e} s/m\\033[0m.\".format(R))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\u001b[1mProvided are:\u001b[0m\n",
      "\n",
      "horizontal hydraulic conductivity = 1.0e-03 m/s\n",
      "vertical hydraulic conductivity = 1.0e-04 m/s\n",
      "angle = 50°\n",
      "\n",
      "\u001b[1mSolution:\u001b[0m\n",
      "\n",
      "The resulting hydraulic conductivity is \u001b[1m6.2e-04 m/s\u001b[0m.\n"
     ]
    }
   ],
   "source": [
    "print(\"\\n\\033[1mProvided are:\\033[0m\\n\")\n",
    "\n",
    "Kh =  1e-3 #horizontal hydraulic conductivity [m/s]\n",
    "Kv =  1e-4 #vertical hydraulic conductivity [m/s]\n",
    "theta = 50 #angle between flow direction ans horizontal plane [°]\n",
    "\n",
    "#solution\n",
    "K = 1 /((np.cos(theta)**2/Kh)+(np.sin(theta)**2/Kv))\n",
    "\n",
    "print(\"horizontal hydraulic conductivity = {:02.1e}\".format(Kh), \"m/s\\n\" \"vertical hydraulic conductivity = {:02.1e}\".format(Kv), \"m/s\\n\"\n",
    "      \"angle = {}°\\n\".format(theta))\n",
    "print(\"\\033[1mSolution:\\033[0m\\n\\nThe resulting hydraulic conductivity is \\033[1m{:02.1e} m/s\\033[0m.\".format(K))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  },
  "toc-autonumbering": true,
  "toc-showtags": true,
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {},
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}